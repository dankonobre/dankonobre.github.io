---
import Layout from '@layouts/PageLayout.astro';
import Section from '@components/Section.astro';
import FilledCircles from '@components/ThemeExample/FilledCircles.astro';
import ColorPalettes from '@components/ThemeExample/ColorPalettes.astro';
---

<Layout>
  <Section>
    <h1 class="pb-4 text-on-surface-100">Tailwind Theme Generator</h1>
    <section
      class="space-y-4 rounded-lg p-4 bg-surface-100 border-t-primary text-on-surface-100"
    >
      <section class="space-y-4">
        <h2>About</h2>
        <div class="space-y-4 px-4">
          <p>
            This is a page for testing the <a
              href="https://github.com/dankonobre/dankonobre.github.io/blob/main/src/utils/tailwindColorThemeGenerator.ts"
              target="_blank"><code>tailwindColorThemeGenerator.ts</code></a
            > plugin that I'm using here, made with the objective to generate better
            named colors in a consistent design system with the possibility to automatically
            generate dark mode colors.
          </p>
          <details class="space-y-4">
            <summary>Details</summary>
            <p>
              The design system generated is heavily inspired by <a
                href="https://m3.material.io/styles/color/roles"
                target="_blank">Google's Material Design 3 (M3)</a
              >, where colors are tokenized into roles. As so, each tokenized
              color by the plugin will produce shades varying from 50 to 950
              (following the Tailwind pattern instead of Material's flat color
              scheme) with the possibility of manually mapping default colors,
              for better control and developer experience.
            </p>
            <p>
              These so called <code>baseColors</code>
              and it's shades are then inverted to produce <code
                >onBaseColors</code
              > and both have their respective inverted colors (again) to be applied
              in conjunction of dark mode class.
            </p>

            <ul>
              <li><code>surface</code></li>
              <li><code>primary</code></li>
              <li><code>secondary</code></li>
              <li><code>tertiary</code></li>
              <li><code>on-surface</code></li>
              <li><code>on-primary</code></li>
              <li><code>on-secondary</code></li>
              <li><code>on-tertiary</code></li>
            </ul>

            <p>
              I've achieved this by first extending the Tailwind color palette
              using external tools such as <a
                href="https://www.realtimecolors.com/"
                target="_blank">realtimecolors.com</a
              > and <a href="https://www.tints.dev/" target="_blank"
                >tints.dev</a
              >.
            </p>
            <p>
              In conjunction with all this, CSS classes are generated
              accordingly with some utilities used in Tailwind:
            </p>
            <ul>
              <li>
                <code>accent</code>: applies the 'accent-color' CSS property.
              </li>
              <li>
                <code>bg</code>: applies the 'background-color' CSS property.
              </li>
              <li>
                <code>border</code>: applies the 'border-color' CSS property.
              </li>
              <li>
                <code>caret</code>: applies the 'caret-color' CSS property.
              </li>
              <li><code>fill</code>: applies the 'fill' CSS property.</li>
              <li>
                <code>ring</code>: applies the '--tw-ring-color' Tailwind's
                variable.
              </li>
              <li>
                <code>ring-offset</code>: applies the '--tw-ring-offset-color'
                CSS property.
              </li>
              <li>
                <code>shadow</code>: applies the '--tw-shadow-color' Tailwind's
                property.
              </li>
              <li><code>stroke</code>: applies the 'stroke' CSS property.</li>
              <li><code>text</code>: applies the 'color' CSS property.</li>
            </ul>
          </details>
        </div>
      </section>

      <hr />

      <section class="space-y-4">
        <h2>Color Palettes</h2>
        <div class="space-y-4 px-4">
          <ColorPalettes />
        </div>
      </section>

      <hr />

      <section class="space-y-4">
        <h2>Filled Circles</h2>
        <div class="space-y-4 px-4">
          <FilledCircles />
        </div>
      </section>
    </section>
  </Section>
</Layout>
